import React, { useRef, useEffect } from "react";
import { Container, Card, Badge,   Button } from "react-bootstrap";
import {
  PersonCircle, CheckCircleFill,
  ShieldShaded, Hourglass, FlagFill, Send,  
  Globe, Award, Lock, Unlock, ExclamationTriangleFill
} from "react-bootstrap-icons";
import { useTranslation } from 'react-i18next';
import { useSelector } from 'react-redux';
import { Link, useLocation } from 'react-router-dom';

import Actualizaciones from "./folder/Actualizaciones";
import Admin from "./folder/Admin";

import BlogPortafolio from "./folder/BlogPortaforlio";
import ContactoComunicacion from "./folder/ContactoComunicacion";
import IntroMarketplace from "./folder/IntroMarketplace";
import Language from "./folder/Language";
import PublicacionesInfo from "./folder/PublicacionesInfo";
import Registro from "./folder/Registro";
import Search from "./folder/Search";
import SeguridadInfo from "./folder/SeguridadInfo";

 

const InfoAplicacion = () => {
  const { languageReducer } = useSelector(state => state);
  const { t, i18n } = useTranslation('aplicacion');

  const lang = languageReducer.language || 'en';
  if (i18n.language !== lang) i18n.changeLanguage(lang);


  const infoRef = useRef(null);
  const registroRef = useRef(null);
  const loginRef = useRef(null);
  const activarCuentaRef = useRef(null);
  const recuperarPasswordRef = useRef(null);
  const publicacionesRef = useRef(null);
  const busquedaRef = useRef(null);
  const lenguajeRef = useRef(null);
  const notificacionesRef = useRef(null);
  const tecnologiasRef = useRef(null);
  const novedadesRef = useRef(null);
  const seguridadRef = useRef(null);
   
  const location = useLocation();
 
  useEffect(() => {
    // admite tanto state.scrollTo como #hash
    const stateTarget = location.state && location.state.scrollTo;
    const hashTarget = location.hash ? location.hash.replace('#', '') : undefined;
    const target = stateTarget || hashTarget;
    if (!target) return;

    const map = {
    
      info: infoRef,
      registro: registroRef,
      login: loginRef,

      publicaciones: publicacionesRef,
     
      lenguaje: lenguajeRef,

      notificaciones: notificacionesRef,


      // Aliases que usabas antes
      activarCuenta: activarCuentaRef,
      recuperarPassword: recuperarPasswordRef,


      tecnologias: tecnologiasRef,
      novedades: novedadesRef,
      seguridad: seguridadRef,
 

    };

    const ref = map[target];
    if (ref && ref.current) {
      ref.current.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  }, [location]);

  // util para "enlazar" manualmente desde títulos
  const scrollTo = (ref) => ref?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });

  return (
    <Container className="my-5 py-4" style={{
      direction: lang === 'ar' ? 'rtl' : 'ltr',
      textAlign: lang === 'ar' ? 'right' : 'left',
    }}>
      {/* Secciones importadas (algunas envueltas para poder anclar) */}

      <section>
        <IntroMarketplace ref={infoRef} />
      </section>
      <section  ref={registroRef}>
        <Registro/>
      </section>
      <section ref={seguridadRef}>
        <SeguridadInfo />
      </section>


      <section ref={publicacionesRef}>
        <PublicacionesInfo />
      </section>


      {/* Búsqueda avanzada como ancla propia */}
      <section ref={busquedaRef} className="mb-5">
        <Search />
      </section>


      <section>
        <ContactoComunicacion />
      </section>

      <section ref={lenguajeRef} className="mb-4">
        <Language />
      </section>
      <section>
        <Admin />
      </section>



      <section   className="mb-4">
        <BlogPortafolio />
      </section>
      <section>
        <Actualizaciones />

      </section>


      <section className="mb-5">
        <h2 className="text-center mb-4 fw-bold" style={{ cursor: 'pointer' }} onClick={() => scrollTo(infoRef)}>
          <PersonCircle className="me-2 text-primary" /> {t('access.title')}
        </h2>
        <div className="text-center mt-4">
          <p className="text-muted">
            <CheckCircleFill className="text-success me-1" /> {t('access.verification')}
          </p>
        </div>


        <p className="text-muted">{t('features.items.chat.description')}</p>
      </section>


      <section className="mb-5">
        <h2 className="text-center mb-4 fw-bold">
          <ShieldShaded className="me-2 text-primary" /> {t('security.title')}
        </h2>


        <Card className="border-primary border-2 bg-primary bg-opacity-10">
          <Card.Body className="p-4">
            <ul className="list-unstyled mb-0">
              <li className="mb-2">
                <Hourglass className="text-warning me-2" />
                <strong>{t('security.features.verification.title')}:</strong> {t('security.features.verification.description')}
              </li>
              <li className="mb-2">
                <FlagFill className="text-danger me-2" />
                <strong>{t('security.features.reporting.title')}:</strong> {t('security.features.reporting.description')}
              </li>
              <li>
                <Send className="text-info me-2" />
                <strong>{t('security.features.appeals.title')}:</strong> {t('security.features.appeals.description')}
              </li>
            </ul>
          </Card.Body>
        </Card>
      </section>




      <section className="mb-5">


        <Card className="bg-dark text-white overflow-hidden">
          <div className="row g-0">
            <div className="col-lg-6 p-4 p-md-5 d-flex align-items-center">
              <div>
                <div className="d-flex align-items-center mb-3">
                  <Lock size={20} className="me-2 text-success" />
                  <span>{t('technology.features.security')}</span>
                </div>
                <div className="d-flex align-items-center mb-3">
                  <Globe size={20} className="me-2 text-info" />
                  <span>{t('technology.features.translations')}</span>
                </div>
                <div className="d-flex align-items-center">
                  <Award size={20} className="me-2 text-warning" />
                  <span>{t('technology.features.moderation')}</span>
                </div>
              </div>
            </div>
            <div className="col-lg-6 d-none d-lg-block">
              <div className="bg-art-pattern h-100"></div>
            </div>
          </div>
        </Card>
      </section>


      

      <Card className="border-0 shadow-sm overflow-hidden">
        <div className="row g-0">
          <div className="col-md-4 bg-primary text-white d-flex align-items-center p-4">
            <div>
              <h3 className="fw-bold mb-3">{t('founder.title')}</h3>
              <p className="mb-0">{t('founder.name')}</p>
            </div>
          </div>
          <div className="col-md-8">
            <Card.Body className="p-4">
              <blockquote className="mb-4">
                <p className="lead font-italic">{t('founder.quote')}</p>
              </blockquote>
              <div className="d-flex flex-wrap gap-2">
                <Badge pill bg="light" text="dark" className="fw-normal">
                  <ExclamationTriangleFill className="me-1" /> {t('founder.badges.moderated')}
                </Badge>
                <Badge pill bg="light" text="dark" className="fw-normal">
                  <CheckCircleFill className="me-1" /> {t('founder.badges.secure')}
                </Badge>
                <Badge pill bg="light" text="dark" className="fw-normal">
                  <Unlock className="me-1" /> {t('founder.badges.noCommissions')}
                </Badge>
              </div>
            </Card.Body>
          </div>
        </div>
      </Card>

      {/* CTA */}
      <div className="text-center mt-5 pt-4">
        <h2 className="mb-4">{t('cta.title')}</h2>
        <Button as={Link} to="/register" variant="primary" size="lg" className="me-3">
          {t('cta.register')}
        </Button>
        <Button as={Link} to="/" variant="outline-primary" size="lg">
          {t('cta.gallery')}
        </Button>
      </div>
    </Container>
  );
};

export default InfoAplicacion;